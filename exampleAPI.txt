1. *Balance Sheet
    Returns a company's most recent balance sheet summarizing their liabilities, assets and shareholders' equity.
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/balancesheet?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))
    ####################################

2. *Cash Flows
    Returns a company's most recent cash flow statement showing the amount of cash used and generated
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/cashflows?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))
    ####################################

3. *Earnings Per Share
    Returns a company's most recent earnings per share statement.
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/earningspershare?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))

    ####################################

4.*Equity
    Returns a company's most recent equity statement showing the amount of funds contributed by the stockholders with retained earnings / losses
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/equity?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))

    ####################################

5. *Fair Value Measurements
    Returns a company's most recent fair value measurements statement for financial and non-financial assets and liabilities.
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/fairvalue?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))

    ####################################

6. *Financial Ratios
    Returns up to 10 years of over 100 key financial ratios for a requested company including Profitability, Growth, Cash Flow, Financial Health, Efficiency ratios and more; sourced by Morningstar.
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/ratios?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))
    ####################################

7. *Income
    Returns a company's most recent income statement detailing what they earn for providing their goods and services OR a statement of loss explaining where lost income occurred
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/income?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))
    ####################################

8. *Liabilities
    Returns a company's most recent liabilities coming from past transactions or events
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/liabilities?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))

    ####################################

9. *Operations
    Returns a company's most recent statement of operations showing how they balance costs with revenue
    ########### Python 3.2 #############
        import http.client, urllib.request, urllib.parse, urllib.error, base64

        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': '{subscription key}',
        }

        params = urllib.parse.urlencode({
            # Request parameters
            'formType': '10-K',
            'filingOrder': '0',
        })

        try:
            conn = http.client.HTTPSConnection('services.last10k.com')
            conn.request("GET", "/v1/company/{ticker}/operations?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            print(data)
            conn.close()
        except Exception as e:
            print("[Errno {0}] {1}".format(e.errno, e.strerror))
    ####################################
